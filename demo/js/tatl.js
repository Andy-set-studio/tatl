class BaseComponent extends HTMLElement{constructor(e){super(),this._props=e.props||{},this._state=e.state||{},this._get=e.get||{},this._set=e.set||{},this.get=this._processGetters(),this.props=this._processProps(),this.state=this._monitor(this._state),this.root=this._processRoot(),this.render=e.render||null,this.ready=e.ready||null,this.removed=e.removed||null}connectedCallback(){this._processRender(),"function"==typeof this.ready&&this.ready()}disconnectedCallback(){"function"==typeof this.removed&&this.removed()}attributeChangedCallback(){this.props=this._processProps(),this._processRender()}_monitor(e){const t=this;return new Proxy(e,{set(e,s,r){if(e[s]!==r)return t._set.hasOwnProperty(s)?e[s]=t._set[s](r,t.state[s]):e[s]=r,t._processRender(),!0}})}_processRender(){(this.render?this.render():"").length&&(this.root.innerHTML=this.render())}_processProps(){let e={};return Object.keys(this._props).forEach(t=>{let s={},r=this._props[t],o=this._getAttribute(t);if(r.default&&(s[t]=r.default),r.required&&!o)r.default&&console.warn(`Required attribute '${t}' has no value set, so the default has been set`),s[t]=null,console.error(`Required attribute '${t}' has no value set`);else switch(r.type){case String:default:s[t]=o;break;case Number:s[t]=parseInt(o,10);break;case Boolean:s[t]="true"===o;break;case Object:try{s[t]=JSON.parse(o)}catch(e){s[t]={},console.error(`Tatl prop parse issue. Type = Object. Error = "${e}"`)}}e[t]=s[t]}),e}_processGetters(){const e=this;let t={},s=Object.keys(e._get);return s.length?(s.forEach(s=>{Object.defineProperty(t,s,{get:()=>e._get[s].bind(e)()})}),t):t}_processRoot(e){switch(e){case"standard":default:return this;case"shadow":return this.attachShadow({mode:"open"});case"shadow:closed":return this.attachShadow({mode:"closed"})}}_getAttribute(e){e=e.replace(/([A-Z])/g,"-$1");try{return this.getAttribute(e)}catch(e){return console.error(`Get attribute error: ${e}`),""}}}function tatl(e,t){const s=class extends BaseComponent{constructor(){super(t)}};return"customElements"in window&&customElements.define(e,s),s}function html(e,...t){let s="";return e.forEach((e,r)=>{s+=e+(t[r]||"")}),s}export{html,tatl};